<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuhang.novel.pirate.dao.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.yuhang.novel.pirate.dao.entity.UserEntity">
        <id column="id" jdbcType="CHAR" property="id" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="tel" jdbcType="VARCHAR" property="tel" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="gender" jdbcType="INTEGER" property="gender" />
    </resultMap>

    <!-- 根据用户名查询用户信息 -->
    <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, username, password, tel, email, last_login_time, create_time, gender
    from users
    where username = #{username}
  </select>

    <!-- 更新最后更新时间  -->
    <update id="updateLastTimeByPrimaryKey" parameterType="com.yuhang.novel.pirate.dao.entity.UserEntity">
        update users set last_login_time = #{lastLoginTime}
        where id = #{id}
    </update>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from users
    where id = #{id}
  </delete>
    <insert id="insert" parameterType="com.yuhang.novel.pirate.dao.entity.UserEntity">
    insert into users (id, username, password,
      tel, email, last_login_time,
      create_time, gender)
    values (#{id}, #{username}, #{password},
      #{tel}, #{email}, #{lastLoginTime},
      #{createTime}, #{gender})
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.yuhang.novel.pirate.dao.entity.UserEntity">
    update users
    set username = #{username},
      password = #{password},
      tel = #{tel},
      email = #{email},
      last_login_time = #{lastLoginTime},
      create_time = #{createTime},
      gender = #{gender}
    where id = #{id}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, username, password, tel, email, last_login_time, create_time, gender
    from users
    where id = #{id}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, username, password, tel, email, last_login_time, create_time, gender
    from users
  </select>

</mapper>
