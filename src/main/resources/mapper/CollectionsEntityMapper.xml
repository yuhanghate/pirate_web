<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuhang.novel.pirate.dao.mapper.CollectionsEntityMapper">
  <resultMap id="BaseResultMap" type="com.yuhang.novel.pirate.dao.entity.CollectionsEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="bookid" jdbcType="VARCHAR" property="bookid" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="book_status" jdbcType="VARCHAR" property="bookStatus" />
    <result column="classify_name" jdbcType="VARCHAR" property="classifyName" />
    <result column="resouce_type" jdbcType="VARCHAR" property="resouceType" />
    <result column="uid" jdbcType="CHAR" property="uid" />
    <result column="conver" jdbcType="LONGVARCHAR" property="conver" />
    <result column="desc" jdbcType="LONGVARCHAR" property="desc" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from collections
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yuhang.novel.pirate.dao.entity.CollectionsEntity">
    insert into collections (id, name, bookid, 
      author, create_time, book_status, 
      classify_name, resouce_type, uid, 
      conver, desc)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{bookid,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{bookStatus,jdbcType=VARCHAR}, 
      #{classifyName,jdbcType=VARCHAR}, #{resouceType,jdbcType=VARCHAR}, #{uid,jdbcType=CHAR}, 
      #{conver,jdbcType=LONGVARCHAR}, #{desc,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.yuhang.novel.pirate.dao.entity.CollectionsEntity">
    update collections
    set name = #{name,jdbcType=VARCHAR},
      bookid = #{bookid,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      book_status = #{bookStatus,jdbcType=VARCHAR},
      classify_name = #{classifyName,jdbcType=VARCHAR},
      resouce_type = #{resouceType,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=CHAR},
      conver = #{conver,jdbcType=LONGVARCHAR},
      desc = #{desc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, bookid, author, create_time, book_status, classify_name, resouce_type, 
    uid, conver, desc
    from collections
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, bookid, author, create_time, book_status, classify_name, resouce_type, 
    uid, conver, desc
    from collections
  </select>
</mapper>